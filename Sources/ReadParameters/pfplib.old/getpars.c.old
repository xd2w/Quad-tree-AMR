/* AKG attempt at mimicking the fetch function */

#include <stdio.h>

int opened=0;
char *parname[100],*parvalue[100];
char string[80],parfile[80];
int npar=0;

extern int xargc;
extern char xargv[100][80];

getpars()

{
  FILE *fp,*fopen();

  int i,namelen,foundparfile=0;
  char *equal;

  int *varint;
  float *varfloat;
   
  if (redin())
  {
    while (scanf("%s",string) != EOF)
    {
      parname[npar]  = (char *) alloc(80);
      parvalue[npar] = (char *) alloc(80);

      equal = (char *) strchr(string,'=');

      if (equal != NULL)
      {
        namelen = equal-string;
        strncpy(parname[npar],string,namelen);
        strcpy(parvalue[npar],string+namelen+1);
        npar++;
      }
    }
  }

  if (xargc>1)
  {
    for (i=1;i<xargc;i++)
    {
      strcpy(string,xargv[i]);
      if (strncmp(string,"par=",4) == 0)
      {
        strcpy(parfile,xargv[i]+4);
        foundparfile = 1;
      }
    }

    if (foundparfile)
    {
      if ((fp = fopen(parfile,"r")) == NULL)
      {
        fprintf(stderr,"Paramater file %s not found\n",parfile);
        exit(0);
      }
    
      while (fscanf(fp,"%s",string) != EOF)
      {
        parname[npar]  = (char *) alloc(80);
        parvalue[npar] = (char *) alloc(80);

        equal = (char *) strchr(string,'=');

        if (equal != NULL)
        {
          namelen = equal-string;
          strncpy(parname[npar],string,namelen);
          strcpy(parvalue[npar],string+namelen+1);
          npar++;
        }
      }
      fclose(fp);
    }
  }

  for (i=1;i<xargc;i++)
  {
    strcpy(string,xargv[i]);
    if (strncmp(string,"par=",4) != 0)
    {
      parname[npar]  = (char *) alloc(80);
      parvalue[npar] = (char *) alloc(80);

      equal = (char *) strchr(string,'=');
      if (equal != NULL)
      {
        namelen = equal-string;
        strncpy(parname[npar],string,namelen);
        strcpy(parvalue[npar],string+namelen+1);
        npar++;
      }
    }
  }
  opened = 1;
}
